|lab1_spart
CLOCK_50 => CLOCK_50.IN2
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
HEX0[0] << <GND>
HEX0[1] << <GND>
HEX0[2] << <GND>
HEX0[3] << <GND>
HEX0[4] << <GND>
HEX0[5] << <GND>
HEX0[6] << <VCC>
HEX1[0] << <GND>
HEX1[1] << <GND>
HEX1[2] << <GND>
HEX1[3] << <GND>
HEX1[4] << <GND>
HEX1[5] << <GND>
HEX1[6] << <VCC>
HEX2[0] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] << <GND>
HEX3[0] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[1] << <GND>
HEX3[2] << <GND>
HEX3[3] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[4] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[5] << <GND>
HEX3[6] << <GND>
HEX4[0] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[1] << br_cfg[1].DB_MAX_OUTPUT_PORT_TYPE
HEX4[2] << br_cfg[1].DB_MAX_OUTPUT_PORT_TYPE
HEX4[3] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[4] << <VCC>
HEX4[5] << <VCC>
HEX4[6] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[0] << <VCC>
HEX5[1] << <VCC>
HEX5[2] << <VCC>
HEX5[3] << <VCC>
HEX5[4] << <VCC>
HEX5[5] << <VCC>
HEX5[6] << <VCC>
KEY[0] => rst_n.IN2
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] << rst_n.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << spart:spart0.txd
LEDR[9] << rxd.DB_MAX_OUTPUT_PORT_TYPE
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => br_cfg[0].IN1
SW[9] => br_cfg[1].IN1
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> <UNC>
GPIO[3] <> GPIO[3]
GPIO[4] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO[34] <> <UNC>
GPIO[35] <> <UNC>


|lab1_spart|spart:spart0
clk => clk.IN2
rst_n => rst_n.IN2
iocs => rda.OUTPUTSELECT
iocs => tbr.OUTPUTSELECT
iocs => databus[0].OE
iocs => databus[1].OE
iocs => databus[2].OE
iocs => databus[3].OE
iocs => databus[4].OE
iocs => databus[5].OE
iocs => databus[6].OE
iocs => databus[7].OE
iorw => Equal0.IN0
iorw => Equal1.IN1
iorw => Equal2.IN2
iorw => transmit.DATAIN
rda <= rda.DB_MAX_OUTPUT_PORT_TYPE
tbr <= tbr.DB_MAX_OUTPUT_PORT_TYPE
ioaddr[0] => Equal0.IN2
ioaddr[0] => Equal1.IN0
ioaddr[0] => Equal2.IN1
ioaddr[0] => Equal3.IN1
ioaddr[0] => Equal4.IN1
ioaddr[1] => Equal0.IN1
ioaddr[1] => Equal1.IN2
ioaddr[1] => Equal2.IN0
ioaddr[1] => Equal3.IN0
ioaddr[1] => Equal4.IN0
databus[0] <> databus[0]
databus[1] <> databus[1]
databus[2] <> databus[2]
databus[3] <> databus[3]
databus[4] <> databus[4]
databus[5] <> databus[5]
databus[6] <> databus[6]
databus[7] <> databus[7]
txd <= UART_tx:tx.TX
rxd => rxd.IN1


|lab1_spart|spart:spart0|UART_tx:tx
clk => state.CLK
clk => tx_done~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => tx_shift_reg[0].CLK
clk => tx_shift_reg[1].CLK
clk => tx_shift_reg[2].CLK
clk => tx_shift_reg[3].CLK
clk => tx_shift_reg[4].CLK
clk => tx_shift_reg[5].CLK
clk => tx_shift_reg[6].CLK
clk => tx_shift_reg[7].CLK
clk => tx_shift_reg[8].CLK
rst_n => tx_shift_reg[0].PRESET
rst_n => tx_shift_reg[1].PRESET
rst_n => tx_shift_reg[2].PRESET
rst_n => tx_shift_reg[3].PRESET
rst_n => tx_shift_reg[4].PRESET
rst_n => tx_shift_reg[5].PRESET
rst_n => tx_shift_reg[6].PRESET
rst_n => tx_shift_reg[7].PRESET
rst_n => tx_shift_reg[8].PRESET
rst_n => tx_done~reg0.PRESET
rst_n => state.ACLR
trmt => init.DATAA
trmt => nxt_state.DATAA
baud_clk => Equal0.IN3
baud_clk => Equal1.IN3
baud_clk => always4.IN1
tx_data[0] => Selector7.IN3
tx_data[1] => Selector6.IN3
tx_data[2] => Selector5.IN3
tx_data[3] => Selector4.IN3
tx_data[4] => Selector3.IN3
tx_data[5] => Selector2.IN3
tx_data[6] => Selector1.IN3
tx_data[7] => Selector0.IN4
TX <= tx_shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab1_spart|spart:spart0|UART_rx:rx
clk => state.CLK
clk => rdy~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => rx_shift_reg[0].CLK
clk => rx_shift_reg[1].CLK
clk => rx_shift_reg[2].CLK
clk => rx_shift_reg[3].CLK
clk => rx_shift_reg[4].CLK
clk => rx_shift_reg[5].CLK
clk => rx_shift_reg[6].CLK
clk => rx_shift_reg[7].CLK
clk => rx_shift_reg[8].CLK
clk => RX_3.CLK
clk => RX_2.CLK
rst_n => rdy~reg0.ACLR
rst_n => RX_3.PRESET
rst_n => RX_2.PRESET
rst_n => state.ACLR
RX => RX_2.DATAIN
clr_rdy => always3.IN1
baud_clk => Equal0.IN3
baud_clk => Equal1.IN3
baud_clk => always5.IN1
baud_clk => rx_shift_reg[0].ENA
baud_clk => rx_shift_reg[1].ENA
baud_clk => rx_shift_reg[2].ENA
baud_clk => rx_shift_reg[3].ENA
baud_clk => rx_shift_reg[4].ENA
baud_clk => rx_shift_reg[5].ENA
baud_clk => rx_shift_reg[6].ENA
baud_clk => rx_shift_reg[7].ENA
baud_clk => rx_shift_reg[8].ENA
rx_data[0] <= rx_shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_shift_reg[1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_shift_reg[2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_shift_reg[3].DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_shift_reg[4].DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_shift_reg[5].DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_shift_reg[6].DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_shift_reg[7].DB_MAX_OUTPUT_PORT_TYPE
rdy <= rdy~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab1_spart|driver:driver0
clk => save_buffer[0].CLK
clk => save_buffer[1].CLK
clk => save_buffer[2].CLK
clk => save_buffer[3].CLK
clk => save_buffer[4].CLK
clk => save_buffer[5].CLK
clk => save_buffer[6].CLK
clk => save_buffer[7].CLK
clk => br_change.CLK
clk => br_cfg_flopped[0].CLK
clk => br_cfg_flopped[1].CLK
clk => current_state~1.DATAIN
rst_n => save_buffer[0].ACLR
rst_n => save_buffer[1].ACLR
rst_n => save_buffer[2].ACLR
rst_n => save_buffer[3].ACLR
rst_n => save_buffer[4].ACLR
rst_n => save_buffer[5].ACLR
rst_n => save_buffer[6].ACLR
rst_n => save_buffer[7].ACLR
rst_n => br_cfg_flopped[0].ACLR
rst_n => br_cfg_flopped[1].ACLR
rst_n => br_change.PRESET
rst_n => current_state~3.DATAIN
br_cfg[0] => Equal0.IN1
br_cfg[0] => Decoder0.IN1
br_cfg[0] => br_cfg_flopped[0].DATAIN
br_cfg[0] => Selector10.IN3
br_cfg[1] => Equal0.IN0
br_cfg[1] => Decoder0.IN0
br_cfg[1] => br_cfg_flopped[1].DATAIN
br_cfg[1] => Selector5.IN3
iocs <= <VCC>
iorw <= iorw.DB_MAX_OUTPUT_PORT_TYPE
rda => next_state.OUTPUTSELECT
rda => next_state.OUTPUTSELECT
rda => next_state.OUTPUTSELECT
rda => next_state.OUTPUTSELECT
rda => next_state.OUTPUTSELECT
rda => save.DATAB
tbr => next_state.OUTPUTSELECT
tbr => next_state.OUTPUTSELECT
tbr => next_state.OUTPUTSELECT
tbr => next_state.OUTPUTSELECT
tbr => next_state.OUTPUTSELECT
ioaddr[0] <= ioaddr[0].DB_MAX_OUTPUT_PORT_TYPE
ioaddr[1] <= ioaddr_reg.DB_MAX_OUTPUT_PORT_TYPE
databus[0] <> databus[0]
databus[1] <> databus[1]
databus[2] <> databus[2]
databus[3] <> databus[3]
databus[4] <> databus[4]
databus[5] <> databus[5]
databus[6] <> databus[6]
databus[7] <> databus[7]


